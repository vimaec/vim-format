name: Publish NuGet

on:
  workflow_call:
    inputs:
      project_path:
        type: string
        required: true
      test_project_path:
        type: string
        required: true
      package_name:
        type: string
        required: true
      api_key:
        type: string
        required: true

env:
  NUGET_ENABLE_LEGACY_CSPROJ_PACK: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:

    ############################
    ########## SETUP ###########
    ############################

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
          lfs: true
    - name: Install additional tools
      run: sudo apt install nuget
      shell: bash
    - name: Check version
      # composite actions don't support if-statements yet
      run: |
        ! [[ "${{ inputs.package_name }}" == "" ]] && \
        ./devops/check-nuget-version.sh ${{ inputs.project_path }} ${{ inputs.package_name }} \
        || true
      shell: bash

    ############################
    ########## BUILD ###########
    ############################

    - name: Restore dependencies
      run: dotnet restore ${{ inputs.project_path }}
      shell: bash
    - name: Build
      run: dotnet build -c Release --no-restore ${{ inputs.project_path }}
      shell: bash
    - name: Test
      run: dotnet test -c Release ${{ inputs.test_project_path }}
      shell: bash
    - name: Pack NuGet package
      run: nuget pack ${{ inputs.project_path }} -Symbols -SymbolPackageFormat snupkg -OutputDirectory . -NonInteractive -Properties Configuration=Release -Exclude *.tt
      shell: bash

    ##############################
    ########## PUBLISH ###########
    ##############################

    - name: Push NuGet package
      run: nuget push ${{ inputs.package_name }}*.nupkg -ApiKey ${{ inputs.api_key }} -Source https://api.nuget.org/v3/index.json
      shell: bash
    - name: Tag commit
      run: ./devops/cs-tag-commit.sh ${{ inputs.project_path }} ${{ inputs.package_name }}
      shell: bash
